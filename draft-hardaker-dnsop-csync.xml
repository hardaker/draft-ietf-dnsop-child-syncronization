<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
  <!ENTITY rfc1034 PUBLIC '' 'reference.RFC.1034.xml'>
  <!ENTITY rfc3597 PUBLIC '' 'reference.RFC.3597.xml'>
]>
<?rfc strict="yes" ?>
<?rfc toc="yes" ?>
<?rfc tocdepth="3" ?>
<?rfc symrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc category="std" ipr="trust200902" docName="draft-hardaker-dnsop-csync-FILLVERSION">
    <front>
    <title abbrev="Child To Parent Synchronization in DNS">
      Child To Parent Synchronization in DNS
    </title>
    <author initials="W.H." surname="Hardaker" fullname="Wes Hardaker">
      <organization>Parsons, Inc.</organization>
      <address>
	<postal>
	  <street>P.O. Box 382</street>
	  <city>Davis</city>
	  <region>CA</region>
	  <code>95617</code>
	  <country>US</country>
	</postal>
	<phone>+1 530 792 1913</phone>
        <email>ietf@hardakers.net</email>
      </address>
    </author>
    <date month="FILLMONTH" year="FILLYEAR"/>
    <area>Operations and Management</area>
    <workgroup>DNSOP</workgroup>
    <!--
    <keyword ...>
    <keyword ...>
    -->
    <abstract>
      <t>This document specifies how a child can publish a record in
      its DNS zone that can indicate that a parental agent may copy
      certain records from the child zone.  They record may be
      monitored by a parental agent to either assist in or
      automatically transferring data between the child and
      parent.</t>

    </abstract>
    <!--
    <note ...>
    -->
  </front>

  <middle>
    <section title="Introduction">

      <t>This document specifies how a child can publish a record in
      its DNS zone that can indicate that a parental agent may copy
      certain records from the child zone.  They record may be
      monitored by a parental agent to either assist in or
      automatically transferring data between the child and
      parent.</t>

      <t>Some resource records (RRs) in a parent zone are typically
      expected to be in-sync with the data in the child's zone.  This
      is currently limited to NS and associated A and AAAA "glue"
      records.  Additionally, the children frequently have DNSKEY
      records which require corresponding DS record(s) in the parent.
      These records are referred to as "delegation records".</t>

      <t>It has been traditionally challenging for children to keep
      delegation records within a parent's delegation data current.
      This difficult usually derives from simple operator laziness or
      the complexities of maintaining a large number of DNS zones.
      Having an automated mechanism to update a parent's set of
      delegation records will greatly ease the maintenance burden of a
      child zone and improve the robustness of the DNS.</t>

      <t>This draft introduces a new RRTYPE ("CSYNC") that indicates
      which delegation records within a child should be copied into
      the parent's DNS zone data.</t>

      <section title="Requirements notation" anchor="musts">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
	  "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
	  and "OPTIONAL" in this document are to be interpreted as
	  described in <xref target="RFC2119"/>.</t>
      </section>
    </section>

    <section title="Definition of the CSYNC RRType">
      <t>The CSYNC RRType contains as its RDATA two components: an
      SOA serial number and a simple bit-list indicating the DNS
      RRTypes in the child that should be copied into the parent's DNS
      delegation records for the child.  Children wishing a parental
      agent to perform a synchronization MUST publish a CSYNC record
      at the apex of the child zone.  Parent agent implementations MAY
      choose to query child zones for this record and copy the data
      indicated by the bit field in the RDATA of the CSYNC record
      according to the procedures listed later.  Parental agent's MUST
      process the entire set of child data requested (i.e., all record
      types indicated along with all of the records for that type) or
      else parent agents MUST NOT process any data records at all.
      Errors due to unsupported bits or otherwise nonpunishable data
      SHALL result in no change to the parent zone's delegation
      information for the child.  Parental agents SHOULD ignore a
      child's CSYNC RDATA set if multiple CSYNC resource records are
      found; only a single CSYNC record should be expected.</t>

      <t>The parental agent MUST perform DNSSEC validation of the
      CSYNC RRTYPE data and MUST perform DNSSEC validation of any data
      to be copied from the child to the parent.  Parents MUST not
      process any data if any of the validation results indicate
      any anything other than "Secure" <xref target="RFC4034" />.</t>

      <section title="The CSYNC Resource Record Wire Format">
	<t>The CSYNC RDATA consists of the following fields:</t>
<figure>
<artwork>
                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                        SOA Serial                             |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   /                       Type Bit Map                            /
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
</figure>

        <section title="The SOA Serial Field">
	  <t>The SOA Serial field contains a copy of the 32-bit SOA serial
	  number from the child zone.  If the value is non-zero,
	  parental agent querying children's authoritative servers
	  MUST NOT act on data from zones advertising an SOA serial
	  number less than this value.  A special value of 0 indicates
	  that no such restriction is in place.</t>
	  
	  <t>Parental agents MAY cache SOA serial numbers from
	  data they use and refuse to process data from zones older
	  than the last zone they pulled data from.</t>
	</section>
        <section title="The Type Bit Map Field">
	  <t>The Type Bit Map field indicates the record types to be
	  processed by the parental agent, according to the procedures
	  in Section <xref target="data_processing" format="counter" />.
	  The field is encoded in the same way as the Type Bit
	  Maps field of the NSEC record, described in <xref
	  target="RFC4034" />, Section 4.1.2.</t>  If a bit has been
	  set that a parental agent implementation does not
	  understand, the parental agent MUST NOT act upon the data.
	  Specifically, a parental agent must not copy data blindly
	  and a specification must exist that defines how the data
	  should be processed.
	</section>
      </section>

      <section title="The CSYNC Presentation Format">
	<t>The CSYNC presentation format is as follows:</t>
	<t>The SOA Serial field is represented as an integer.</t>
	<t>The Type Bit Map field is represented as a sequence of RR
	type mnemonics.  When the mnemonic is not known, the TYPE representation
	described in <xref target="RFC3597" />, Section 5, MUST be used.</t>
      </section>

      <section title="CSYNC RR Example">
	<t>The following CSYNC RR shows an example entry for
	"example.com" that indicates the NS, A and AAAA records should
	be processed for the zone using a minimum SOA serial number of
	66.

<figure>
<artwork>
foo
</artwork>
</figure>
</t>

        <t>The RDATA component of the example CSYNC RR would be
	encoded on the wire as follows:

<figure>
<artwork>
  0x00 0x00 0x00 0x42
  0x00 0x04 0x60 0x00 0x00 0x08
</artwork>
</figure>
</t>

      </section>
    </section>
    <section title="CSYNC Data Processing" anchor="data_processing">
      <t>This document defines how the following record types may be
      processed if the CSYNC RECORDLIST indicates they should be
      processed.</t>
      <section title="The NS type" anchor="ns">
	<t>The NS type flag indicates that the NS records from the
	child zone should be copied into the parent's delegation
	information records for the child.</t>

	<t>NS records found within the child should be copied verbatim
	and the result should be a matching set of NS records in the
	parent.  Note: if NS records in the parent's delegation
	records for the child contain records that have been removed
	in the child's NS set, then they should be removed in the
	parent's set as well.</t>
	</t>
      </section>
      <section title="The A and AAAA types">
	<t>The A and AAAA type flags indicates that the A and AAAA,
	respectively, address glue records for in-bailiwick NS records
	within the child zone should be copied into the parent's
	delegation information.</t>

	<t>Queries should be sent by the parental agent to determine
	the required A and AAAA record addresses for each NS record
	within a parent's NS delegation record set for the child that
	are in-bailiwick.  The answers to these queries should be
	check for DNSSEC "Secure" status and then placed into the
	parent's delegation record set for the child to become
	appropriate "glue" records.  Note: only the matching types
	should be queried.  E.g., if the AAAA bit has not been set,
	then the AAAA records (if any) in the parent's delegation
	should remain as is.  If a given address type is set and the
	child's zone contains no data for that type (as proven by
	appropriate NSEC or NSEC3 records), then the result in the
	parent's delegation records for the child should be an empty
	set.
	</t>

	<t>The procedure for querying for A and AAAA records MUST
	occur after the procedure, if required, for querying for NS
	records as defined in Section <xref target="ns" />.  This
	ensures that the right set NS records is used as provided by
	the current NS set of the child.  Note that if the NS flag has
	not been set, then the existing NS records in the parent's
	delegation records for the child should be used as-is.</t>
      </section>
    </section>

    <section title="Operational Considerations">
      <t>XXX: error reporting</t>
      <t>XXX: Parental agent's polling multiple child servers</t>
      <t>XXX: Polling frequency thoughts</t>
    </section>
    <section title="Security Considerations">
    </section>
  </middle>
  <back>
    <references title="Normative References">
      &rfc2119;
      &rfc3597;
      &rfc4034;
    </references>
    <references title="Informative References">
      &rfc1034;
      &rfc1035;
      &rfc4033;
      &rfc4035;
    </references>
  </back>
</rfc>
